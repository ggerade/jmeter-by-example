<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Depend on Parallel Worker Threads" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="numUsers" elementType="Argument">
            <stringProp name="Argument.name">numUsers</stringProp>
            <stringProp name="Argument.value">20</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Number of threads in the Master Thread Group</stringProp>
          </elementProp>
          <elementProp name="numWorkersPerUser" elementType="Argument">
            <stringProp name="Argument.name">numWorkersPerUser</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Number of threads in Worker Thread Group per user in Main Thread Group</stringProp>
          </elementProp>
          <elementProp name="numWorkerThreads" elementType="Argument">
            <stringProp name="Argument.name">numWorkerThreads</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.desc">Hand calculated here: numUsers * numWorkersPerUser</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="Dynamic Global Config" enabled="false">
        <stringProp name="scriptLanguage">javascript</stringProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="script">// Note: This bsf preprocessor doesn&apos;t seem to run early enough to affect the thread group num users parameter...
// Calc the number of worker threads, users * number workers per user
var numUsers = vars.get(&quot;numUsers&quot;);
var numWorkersPerUser = vars.get(&quot;numWorkersPerUser&quot;);
vars.put(&quot;numWorkerThreads&quot;, (numUsers*numWorkersPerUser).toString());
</stringProp>
        <stringProp name="TestPlan.comments">Can be used to calc &quot;global&quot; vars - didn&apos;t work for thread group number of users parm though...</stringProp>
      </BSFPreProcessor>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Master Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${numUsers}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1381265134000</longProp>
        <longProp name="ThreadGroup.end_time">1381265134000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <BSFAssertion guiclass="TestBeanGUI" testclass="BSFAssertion" testname="Assert that we have enough worker threads configured" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">// Calc the number of worker threads, users * number workers per user
var numUsers = vars.get(&quot;numUsers&quot;);
var numWorkersPerUser = vars.get(&quot;numWorkersPerUser&quot;);
var numWorkerThreads = vars.get(&quot;numWorkerThreads&quot;);

if (numUsers*numWorkersPerUser != numWorkerThreads) {
	prev.setSuccessful(false);
	prev.setResponseMessage(&quot;You need to set numWorkerThreads properly in User Defined Variables&quot;);
}
</stringProp>
          <stringProp name="scriptLanguage">javascript</stringProp>
        </BSFAssertion>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Master Loop for repeating work requests/wait for complete" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">3</stringProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Request work loop, one for each worker" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${numWorkersPerUser}</stringProp>
          </LoopController>
          <hashTree>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Request Work from Thread #${__threadNum}" enabled="true">
              <stringProp name="TestPlan.comments">You can put the Inter-Thread Procs in with no parent sampler, but there&apos;s no indication it runs in the Results so I use this Dummy Sampler for clarity</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA">Dummy Sampler used to hang inter-thread PostProcessor off of. That postproc will request the work.</stringProp>
              <stringProp name="RESPONSE_DATA">Dummy Sampler used to hang inter-thread PostProcessor off of. That postproc will request the work.</stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree>
              <kg.apc.jmeter.modifiers.FifoPutPostProcessor guiclass="kg.apc.jmeter.modifiers.FifoPutPostProcessorGui" testclass="kg.apc.jmeter.modifiers.FifoPutPostProcessor" testname="Request Work Inter-Thread PreProcessor" enabled="true">
                <stringProp name="Value">request${requestNum}</stringProp>
                <stringProp name="FifoName">workRequestQueue${__threadNum}</stringProp>
                <stringProp name="TestPlan.comments">Signals Worker Thread Group to get to work on maps</stringProp>
              </kg.apc.jmeter.modifiers.FifoPutPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Work Completed &quot;${workCompleted}&quot; for Thread #${__threadNum}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA"></stringProp>
            <stringProp name="RESPONSE_DATA"></stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <kg.apc.jmeter.modifiers.FifoPopPreProcessor guiclass="kg.apc.jmeter.modifiers.FifoPopPreProcessorGui" testclass="kg.apc.jmeter.modifiers.FifoPopPreProcessor" testname="Wait for Work Completed Inter-Thread PreProcessor" enabled="true">
              <stringProp name="Timeout"></stringProp>
              <stringProp name="Variable">workCompleted</stringProp>
              <stringProp name="FifoName">workCompleteQueue${__threadNum}</stringProp>
            </kg.apc.jmeter.modifiers.FifoPopPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Sync master threads to ensure all workers are complete before signaling stop" enabled="true">
          <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
        </GenericController>
        <hashTree>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
            <intProp name="groupSize">0</intProp>
            <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
          </SyncTimer>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Master Synching Dummy Sampler" enabled="true">
            <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA"></stringProp>
            <stringProp name="RESPONSE_DATA"></stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If first thread, signal workers to stop" enabled="true">
          <stringProp name="IfController.condition">${__threadNum}==1</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Signal Workers Stop" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to hang inter-thread PostProcessor off of. That postproc will signal to stop.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to hang inter-thread PostProcessor off of. That postproc will signal to stop.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="TestPlan.comments">You can put the Inter-Thread Procs in with no parent sampler, but there&apos;s no indication it runs in the Results so I use this Dummy Sampler for clarity</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <kg.apc.jmeter.modifiers.FifoPutPostProcessor guiclass="kg.apc.jmeter.modifiers.FifoPutPostProcessorGui" testclass="kg.apc.jmeter.modifiers.FifoPutPostProcessor" testname="Signal Workers Stop Inter-Thread Communication PostProcessor" enabled="true">
              <stringProp name="Value">STOP</stringProp>
              <stringProp name="FifoName">workerControlSignal</stringProp>
            </kg.apc.jmeter.modifiers.FifoPutPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Worker Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${numWorkerThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1381258275000</longProp>
        <longProp name="ThreadGroup.end_time">1381258275000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Check for Control Signal &quot;${controlSignal}&quot;" enabled="true">
          <boolProp name="WAITING">false</boolProp>
          <boolProp name="SUCCESFULL">true</boolProp>
          <stringProp name="RESPONSE_CODE">200</stringProp>
          <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
          <stringProp name="REQUEST_DATA">Sampler to hang Inter-Thread Communication PreProcessor off of</stringProp>
          <stringProp name="RESPONSE_DATA">Sampler to hang Inter-Thread Communication PreProcessor off of</stringProp>
          <stringProp name="RESPONSE_TIME">0</stringProp>
          <stringProp name="LATENCY">0</stringProp>
          <stringProp name="TestPlan.comments">You can put the Inter-Thread Procs in with no parent sampler, but there&apos;s no indication it runs in the Results so I use this Dummy Sampler for clarity</stringProp>
        </kg.apc.jmeter.samplers.DummySampler>
        <hashTree>
          <kg.apc.jmeter.modifiers.FifoPopPreProcessor guiclass="kg.apc.jmeter.modifiers.FifoPopPreProcessorGui" testclass="kg.apc.jmeter.modifiers.FifoPopPreProcessor" testname="Check for Control Signal Inter-Thread Communication PreProcessor" enabled="true">
            <stringProp name="Timeout">1</stringProp>
            <stringProp name="Variable">controlSignal</stringProp>
            <stringProp name="FifoName">workerControlSignal</stringProp>
          </kg.apc.jmeter.modifiers.FifoPopPreProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Stop Signal" enabled="true">
          <stringProp name="IfController.condition">&quot;${controlSignal}&quot;===&quot;STOP&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Stop All Threads" enabled="true">
            <intProp name="ActionProcessor.action">2</intProp>
            <intProp name="ActionProcessor.target">2</intProp>
            <stringProp name="ActionProcessor.duration"></stringProp>
          </TestAction>
          <hashTree/>
        </hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Determine master thread number" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">
var numWorkersPerUser = Integer.parseInt(vars.get(&quot;numWorkersPerUser&quot;));

var masterThreadNum = (ctx.getThreadNum() / numWorkersPerUser) + 1;
//log.info(&quot;I&apos;ll do work for main threadNum: &quot; + masterThreadNum);

vars.put(&quot;masterThreadNum&quot;, masterThreadNum.toString());</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Not Interrupted" enabled="true">
          <stringProp name="TestPlan.comments">When the STOP signal is sent to first thread Test Action will stop all threads and Inter-Thread PreProc sets workRequested to INTERRUPTED</stringProp>
          <stringProp name="IfController.condition">&quot;${workRequested}&quot; !==&quot;INTERRUPTED&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Received Work Request &quot;${workRequested}&quot; from Thread #${masterThreadNum}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to hang inter-thread PreProcessor off of. That preproc will wait for the work.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to hang inter-thread PreProcessor off of. That preproc will wait for the work.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="TestPlan.comments">You can put the Inter-Thread Procs in with no parent sampler, but there&apos;s no indication it runs in the Results so I use this Dummy Sampler for clarity</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <kg.apc.jmeter.modifiers.FifoPopPreProcessor guiclass="kg.apc.jmeter.modifiers.FifoPopPreProcessorGui" testclass="kg.apc.jmeter.modifiers.FifoPopPreProcessor" testname="Wait for Work Inter-Thread PreProcessor" enabled="true">
              <stringProp name="Timeout"></stringProp>
              <stringProp name="Variable">workRequested</stringProp>
              <stringProp name="FifoName">workRequestQueue${masterThreadNum}</stringProp>
            </kg.apc.jmeter.modifiers.FifoPopPreProcessor>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Do work for &quot;${workRequested}&quot; from Thread #${masterThreadNum}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler to represent work being done</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler to represent work being done</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
        <SwitchController guiclass="SwitchControllerGui" testclass="SwitchController" testname="Switch for thread bank sync timers" enabled="true">
          <stringProp name="TestPlan.comments">This switch introduces a Sync Timer for each thread tied to a masterThreadNum. 
This way workers for a master all sync, but indendently of the other threads in this group.
This approach is hard to scale as you need a separate switch entry for as many master threads you plan to run.</stringProp>
          <stringProp name="SwitchController.value">${masterThreadNum}</stringProp>
        </SwitchController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Switch Default Sampler, should not be reached" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">false</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">If you&apos;re seeing this, something is wrong with the script</stringProp>
            <stringProp name="RESPONSE_DATA">If you&apos;re seeing this, something is wrong with the script</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set 1 Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set 2 Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synching Controller" enabled="true">
            <stringProp name="TestPlan.comments">The Synch Timer herein will cause all threads to synch here before moving on to next controller</stringProp>
          </GenericController>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${numWorkersPerUser}</stringProp>
              <stringProp name="TestPlan.comments">Note: Affects all samplers in parent controller</stringProp>
            </SyncTimer>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Worker Set N Synching Dummy Sampler" enabled="true">
              <stringProp name="TestPlan.comments">Needed to synch all threads as they come through the parent controller</stringProp>
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME"></stringProp>
              <stringProp name="LATENCY"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If first thread in group, signal completed" enabled="true">
          <stringProp name="IfController.condition">${__threadNum} % ${numWorkersPerUser} == 1</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Signal Work Completed Dummy Sampler" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(100,1000)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,100)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <kg.apc.jmeter.modifiers.FifoPutPostProcessor guiclass="kg.apc.jmeter.modifiers.FifoPutPostProcessorGui" testclass="kg.apc.jmeter.modifiers.FifoPutPostProcessor" testname="Signal Work Completed Inter-Thread PostProcessor" enabled="true">
              <stringProp name="Value">${workRequested}</stringProp>
              <stringProp name="FifoName">workCompleteQueue${masterThreadNum}</stringProp>
            </kg.apc.jmeter.modifiers.FifoPutPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
